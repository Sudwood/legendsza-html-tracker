/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
body
{
	background-color: #122F59;
}

#pokeTotalsP
{
	padding-left: 10px;
}
#taskTotalsP
{
	padding-left: 10px;
}
#rewardTotalsP
{
	padding-left: 10px;
}


.floating-window {
    /* Floating Behavior */
    position: fixed; /* or 'absolute' if within a specific container */
    top: 50px;
    right: 50px;
    z-index: 1000; /* Ensures it stays above other content */

    /* Appearance */
    width: 300px;
    border: 1px solid #ccc;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
    background-color: white;
    font-family: Arial, sans-serif;
	overflow: hidden;
}
#collapseButton
{
	color:rgb(183, 0, 255);
	border: 1px solid #000;
}
.window-header {
    background-color: #f1f1f1;
    padding: 10px;
    cursor: move; /* Indicates the header can be used to drag */
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #ccc;
}

.window-title {
    font-weight: bold;
}

.collapse-btn {
    background: none;
    border: none;
    font-size: 1.2em;
    cursor: pointer;
    padding: 0 5px;
}

.window-content {
    padding: 10px;
    transition: max-height 0.3s ease-out, opacity 0.3s ease-out; /* Smooth transition for collapse */
	max-height: 1000px;
    overflow: hidden;
}

/* Class to hide content when collapsed */
.collapsed .window-content {
   max-height: 0; /* Collapsed: Content is hidden */
    padding-top: 0;
    padding-bottom: 0;
    opacity: 0; /* Optional: Fades out the content */
	height:50px
}
table
{
	background-color: #c4c4c4;
	border: 1px solid #000;margin-left: auto;margin-right: auto;
}
tr
{
	border: 1px solid #000;
}
th
{
	border: 1px solid #000; padding:10px
}
td{
	border: 1px solid #000;text-align:center;
}

input[type="checkbox"]
{
 transform: scale(3); /* Adjust the value to your desired size, e.g., 2 for double size */
  -webkit-transform: scale(3); /* For older WebKit browsers like Safari and Chrome */
  -moz-transform: scale(3); /* For Firefox */
  -ms-transform: scale(3); /* For Internet Explorer */
  margin-bottom:20px
}
input[type="number"]
{
	transform: scale(1.5); /* Adjust the value to your desired size, e.g., 2 for double size */
  -webkit-transform: scale(1.5); /* For older WebKit browsers like Safari and Chrome */
  -moz-transform: scale(1.5); /* For Firefox */
  -ms-transform: scale(1.5); /* For Internet Explorer */
  margin-bottom:20px;
  margin-top:20px
}
.tasksbox
{
	 transform: scale(3); /* Adjust the value to your desired size, e.g., 2 for double size */
  -webkit-transform: scale(3); /* For older WebKit browsers like Safari and Chrome */
  -moz-transform: scale(3); /* For Firefox */
  -ms-transform: scale(3); /* For Internet Explorer */
}

h1
{
	font-weight: bolder;font-size: 36px; text-align: center;
	width:25%;
	margin-left:auto;
	margin-right:auto;
	background-color: #c4c4c4;
}
h3
{
	font-weight: bolder; text-align: center;
}
	@media
	  only screen 
    and (max-width: 760px), (min-device-width: 768px) 
    and (max-device-width: 1024px)  {

		/* Force table to not be like tables anymore */
		table, thead, tbody, th, td, tr {
			display: block;
		}

		/* Hide table headers (but not display: none;, for accessibility) */
		thead tr {
			position: absolute;
			top: -9999px;
			left: -9999px;
			border: 1px solid #000;
		}

    tr {
      margin: 0 0 1rem 0;
    }
      
    tr:nth-child(odd) {
      background: #ccc;
	  border: 1px solid #000;
    }
    
		td {
			/* Behave  like a "row" */
			border: none;
			border-bottom: 1px solid #eee;
			position: relative;
			/*padding-left: 50%;*/
			border: 1px solid #000;text-align:center;
		}

		td:before {
			/* Now like a table header */
			position: absolute;
			/* Top/left values mimic padding */
			top: 0;
			left: 6px;
			/*width: 45%;*/
			padding-right: 10px;
			white-space: nowrap;
			border: 1px solid #000;text-align:center;
		}

		/*
		Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
		*/
	}